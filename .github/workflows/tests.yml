name: Compile and check
on:
  workflow_call:
    inputs:
      cache_paths:
        type: string
        required: false
        default: ""
      elixir-version:
        type: string
        required: false
        default: "1.14.3" # Define the elixir version
      otp-version:
        type: string
        required: false
        default: "25.1" # Define the OTP version
      mix-env:
        type: string
        required: false
        default: test
      elixir-code-path:
        type: string
        required: false
        default: "."
    secrets:
      HEX_ORGANIZATION_COINGAMING_KEY:
        required: true

defaults:
  run:
    shell: bash

env:
  MIX_ENV: ${{ inputs.mix-env }}

jobs:
  build:
    name: Build
    uses: coingaming/.github/.github/workflows/build.yml@v1.4.2
    secrets: inherit
    with:
      mix-env: ${{ inputs.mix-env }}
      cache_paths: ${{ inputs.cache_paths }}
      elixir-version: ${{ inputs.elixir-version }}
      otp-version: ${{ inputs.otp-version }}
      elixir-code-path: ${{ inputs.elixir-code-path }}

  tests:
    name: Run tests
    needs: build
    runs-on: ubuntu-24.04

    services:
      postgres:
        image: postgres:11-alpine
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      localstack:
        image: localstack/localstack

    steps:
      - name: Prepare repo and env
        uses: coingaming/.github/actions/prepare@v1.4.2
        with:
          mix-env: ${{ inputs.mix-env }}
          cache_paths: ${{ inputs.cache_paths }}
          elixir-version: ${{ inputs.elixir-version }}
          otp-version: ${{ inputs.otp-version }}
          token: ${{ secrets.GH_TOKEN != '' && secrets.GH_TOKEN || github.token }}
          elixir-code-path: ${{ inputs.elixir-code-path }}

      - name: DB setup
        continue-on-error: true
        run: |
          cd ${{ inputs.elixir-code-path }}
          mix ecto.setup

      - name: Tests
        run: |
          cd ${{ inputs.elixir-code-path }}
           mix test

     # TODO: Fix coverage and make it work
     # - name: Coverage
     #   run: mix coveralls.github
     #   env:
     #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
