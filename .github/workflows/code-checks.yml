name: Compile and check
on: push

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build
    uses: ./.github/workflows/build.yml
    secrets: inherit

  code_checks:
    name: Run code checks
    needs: build
    runs-on: ubuntu-20.04
    env:
      MIX_ENV: test

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GH_TOKEN }}

      - name: Set up Elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          elixir-version: "1.14.3" # Define the elixir version
          otp-version: "25.1" # Define the OTP version

      - name: Restore Cache
        uses: actions/cache@v2
        id: cache
        with:
          key: v2-release-${{ hashFiles('mix.lock') }}-${{ github.sha }}

          restore-keys: |
            v2-release-${{ hashFiles('mix.lock') }}-${{ github.sha }}
          path: |
            ~/.mix
            ./test/support/generated
            ./deps
            ./_build

      - name: Format
        run: mix format --check-formatted

      - name: Credo
        run: mix credo

  dialyzer:
    name: Run dialyzer
    needs: build
    runs-on: ubuntu-20.04
    env:
      MIX_ENV: test

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GH_TOKEN }}

      - name: Set up Elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          elixir-version: "1.14.3" # Define the elixir version
          otp-version: "25.1" # Define the OTP version

      - name: Restore Cache
        uses: actions/cache@v2
        id: cache
        with:
          key: v2-release-${{ hashFiles('mix.lock') }}-${{ github.sha }}

          restore-keys: |
            v2-release-${{ hashFiles('mix.lock') }}-${{ github.sha }}
          path: |
            ~/.mix
            ./test/support/generated
            ./deps
            ./_build

      - name: Run dialyzer
        run: mix dialyzer --format github

  tests:
    name: Run tests
    needs: build
    runs-on: ubuntu-20.04
    env:
      MIX_ENV: test

    services:
      postgres:
        image: postgres:11-alpine
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GH_TOKEN }}

      - name: Set up Elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          elixir-version: "1.14.3" # Define the elixir version
          otp-version: "25.1" # Define the OTP version

      - name: Restore Cache
        uses: actions/cache@v2
        id: cache
        with:
          key: v2-release-${{ hashFiles('mix.lock') }}-${{ github.sha }}

          restore-keys: |
            v2-release-${{ hashFiles('mix.lock') }}-${{ github.sha }}
          path: |
            ~/.mix
            ./test/support/generated
            ./deps
            ./_build


      - name: DB setup
        run: |
          echo ${{ env.MIX_ENV }}
          ls _build
          mix ecto.setup

      - name: Tests
        run: mix test

     # TODO: Fix coverage and make it work
     # - name: Coverage
     #   run: mix coveralls.github
     #   env:
     #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}


